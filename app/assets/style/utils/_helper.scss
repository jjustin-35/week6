@each $key, $value in map-merge($spacers, $percentage){
    .w-#{$key}{
        width: $value!important;
    }
    .h-#{$key}{
        height: $value!important;
    }
    .minw-#{$key}{
        min-width: $value!important;
    }
    .minh-#{$key}{
        min-height: $value!important;
    }
    // position
    .top-#{$key}{
        top: $value;
    }
    .start-#{$key}{
        left: $value;
    }
    .bottom-#{$key}{
        bottom: $value;
    }
    .end-#{$key}{
        right: $value;
    }
}

.w-fit{
    width: fit-content !important;
}
.h-fit{
    height: fit-content !important;
}

.text-gradient{
    &-y{
        @include color-gradient-y();
    };
    &-x{
        @include color-gradient-x();
    }
}
.bg-gradient{
    &-y{
        @include color-gradient-y('bg');
    };
    &-x{
        @include color-gradient-x('bg');
    }
}

@each $key, $value in $percentage{
    .opacity-#{$key}{
        opacity: $value;
    }
}

@each $key, $value in $font-sizes{
    .fs-#{$key}{
        
        font-size: $value !important;
        
    }
}

@each  $breakpoint in map-keys($grid-breakpoints) {
    // fs
    @each $key, $value in $font-sizes{
        .fs-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                font-size: $value !important;
            }
        }
    }
    .fs-#{$breakpoint}-auto{
        @include media-breakpoint-up($breakpoint){
            font-size: inherit;
        }
    }
    // gradient
    .text-gradient-#{$breakpoint}{
        @include media-breakpoint-up($breakpoint){
            &-y{
                @include color-gradient-y();
            };
            &-x{
                @include color-gradient-x();
            }
            &-none{
                color: inherit !important;
            }
        }
        
    }
    .bg-gradient-#{$breakpoint}{
        @include media-breakpoint-up($breakpoint){
            &-y{
                @include color-gradient-y("bg");
            };
            &-x{
                @include color-gradient-x("bg");
            }
        }
    }
    // bg-color, text-color, border-color
    @each $key, $value in $theme-colors{
        .bg-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                background-color: $value !important;
            }
        }
        .text-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                color: $value !important;
            }
        }
        .border-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                border-color: $value !important;
            }
        }
    }
    // opacity
    @each $key, $value in $percentage{
        .opacity-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                opacity: $value;
            }
        }
    }
    // width, height
    @each $key, $value in map-merge($spacers, $percentage){
        .w-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                width: $value!important;
            }
        }
        .h-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                height: $value!important;
            }
        }
        .minw-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                min-width: $value!important;
            }
        }
        .minh-#{$breakpoint}-#{$key}{
            @include media-breakpoint-up($breakpoint){
                min-height: $value!important;
            }
        }
    }

    .w-#{$breakpoint}-fit{
        @include media-breakpoint-up($breakpoint){
            width: fit-content !important;
        }
        
    }
    .w-#{$breakpoint}-auto{
        @include media-breakpoint-up($breakpoint){
            width: auto!important;
        }
        
    }
    .h-#{$breakpoint}-fit{
        @include media-breakpoint-up($breakpoint){
            height: fit-content !important;
        }
        
    }
}

.position-absolute-center{
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}

.rounded{
    &-default{
        border-radius: 12px;
    }
    &-lg{
        border-radius: 24px;
    }
}

.z-index{
    &-1{
        z-index: 1;
    }
}

.text-center-md-left{
    text-align: center;
    @include media-breakpoint-up(md){
        text-align: left;
    }
}

.position{
    &-md-absolute{
        @include media-breakpoint-up(md){
            position: absolute !important;
        }
    }
}
